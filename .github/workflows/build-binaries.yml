name: Build Binaries

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os.version }}

    permissions:
      id-token: write
      contents: read
      attestations: write

    strategy:
      fail-fast: false
      matrix:
        os:
          - version: ubuntu-24.04-arm
            arch: arm64
          - version: ubuntu-24.04
            arch: x86_64
        mysql_version:
          # - version: 9.4.0
          #   line: 9.4
          # - version: 9.3.0
          #   line: 9.3
          # - version: 9.2.0
          #   line: 9.2
          # - version: 9.1.0
          #   line: 9.1
          # - version: 9.0.1
          #   line: '9.0'
          # - version: 8.4.6
          #   line: 8.4
          # - version: 8.4.5
          #   line: 8.4
          # - version: 8.4.4
          #   line: 8.4
          # - version: 8.4.3
          #   line: 8.4
          # - version: 8.4.2
          #   line: 8.4
          # - version: 8.4.0
          #   line: 8.4
          # - version: 8.0.40
          #   line: '8.0'
          #   boost_version: 1.77.0
          #   boost_version_u: 1_77_0
          # - version: 8.0.39
          #   line: '8.0'
          #   boost_version: 1.77.0
          #   boost_version_u: 1_77_0
          # - version: 8.0.37
          #   line: '8.0'
          #   boost_version: 1.77.0
          #   boost_version_u: 1_77_0
          # - version: 8.0.36
          #   line: '8.0'
          #   boost_version: 1.77.0
          #   boost_version_u: 1_77_0
          # --- KNOWN WORKING - THESE ARE COMMENTED OUT TO SPEED UP DEVELOPMENT - WILL UNCOMMENT LATER
          - version: 8.0.4
            line: '8.0'
            release_type: -rc
            boost_version: 1.65.0
            boost_version_u: 1_65_0
          - version: 8.0.2
            line: '8.0'
            release_type: -dmr
          - version: 8.0.1
            line: '8.0'
            release_type: -dmr

    steps:
      - name: Checkout Repository
        uses: actions/checkout@4.2.2

      - name: Build Docker Image
        run: docker build -t alpine-build --build-arg major_minor_version=${{ matrix.mysql_version.line }} --build-arg mysql_version=${{ matrix.mysql_version.version }} --build-arg url=$(echo $(if [[ ${{ matrix.mysql_version.version }} == "8.0.43" || ${{ matrix.mysql_version.version }} == "8.4.6" || ${{ matrix.mysql_version.version }} == "9.4.0" ]]; then echo "https://cdn.mysql.com/Downloads/MySQL-"; else echo "https://cdn.mysql.com/archives/mysql-"; fi)${{ matrix.mysql_version.line }}/mysql-${{ matrix.mysql_version.version }}${{ matrix.mysql_version.release_type }}.tar.gz) --build-arg release_type=${{ matrix.mysql_version.release_type }} --build-arg boost_version=${{ matrix.mysql_version.boost_version }} --build-arg boost_version_u=${{ matrix.mysql_version.boost_version_u }} --build-arg legacy_openssl=${{ matrix.mysql_version.legacy_openssl }} .

      - name: Export image contents
        run: docker export $(docker create alpine-build) -o image-output.tar

      - name: Upload export to GitHub Actions Artifacts
        uses: actions/upload-artifact@4.6.2
        with:
          name: ${{ matrix.os.arch }}-${{ matrix.mysql_version.version }}-image-output-tar
          path: image-output.tar
          if-no-files-found: error
          compression-level: 9

      - name: Untar image contents
        run: tar -xvf image-output.tar

      - name: Create build output folder
        run: mkdir build-output

      - name: List directory
        run: ls mysql-build

      - name: Copy license and README into the mysql build folder
        run: cp mysql-build/mysql-source/{LICENSE,README} mysql-build/mysql-source/mysql

      - name: Extract important files and folders from the mysql build folder into build output folder
        run: cp -r mysql-build/mysql-source/mysql/{Docs,include,LICENSE,man,README,share,support-files} build-output

      - name: Remove bin and lib symlinks
        working-directory: mysql-build/mysql-source/mysql
        run: rm -f bin lib

      - name: Extract runtime_output_directory into build folder
        run: cp -r mysql-build/mysql-source/mysql/runtime_output_directory mysql-build/mysql-source/mysql/bin

      - name: Extract library_output_directory into build folder
        run: cp -r mysql-build/mysql-source/mysql/library_output_directory mysql-build/mysql-source/mysql/lib

      - name: Upload build to GitHub Actions Artifacts
        uses: actions/upload-artifact@4.6.2
        with:
          name: ${{ matrix.os.arch }}-${{ matrix.mysql_version.version }}-mysql-source-build
          path: mysql-build/mysql-source
          if-no-files-found: error
          compression-level: 9

      - name: Create tar of build
        run: tar -cvzf mysql-musl-${{ matrix.mysql_version.version }}-${{ matrix.os.arch }}.tar.gz mysql-build/mysql-source

      - name: Upload tarred build output folder to GitHub Actions Artifacts
        uses: actions/upload-artifact@4.6.2
        with:
          name: ${{ matrix.os.arch }}-${{ matrix.mysql_version.version }}-source-build-output-tar
          path: mysql-musl-${{ matrix.mysql_version.version }}-${{ matrix.os.arch }}.tar.gz
          if-no-files-found: error
          compression-level: 0

      - name: Generate build attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: mysql-musl-${{ matrix.mysql_version.version }}-${{ matrix.os.arch }}.tar.gz

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 #v2.11.2
        with:
          repo_token: ${{ secrets.PAT }}
          overwrite: true
          release_name: Latest Build
          file: mysql-musl-${{ matrix.mysql_version.version }}-${{ matrix.os.arch }}.tar.gz
          tag: current
          body: Latest builds of MySQL server for musl libc.

