name: Build Binaries

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os.version }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - version: ubuntu-24.04
            artifact-name: ubuntu-24-04-x64
          - version: ubuntu-24.04-arm
            artifact-name: ubuntu-24-04-arm64
        mysql_version:
          - version: 9.4.0
            line: 9.4
          - version: 9.3.0
            line: 9.3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@4.2.2

      - name: Build Docker Image
        run: docker build -t alpine-build --build-arg major_minor_version=${{ matrix.mysql_version.line }} --build-arg mysql_version=${{ matrix.mysql_version.version }} --build-arg url=$(echo $(if [[ ${{ matrix.mysql_version.version }} == "8.0.43" || ${{ matrix.mysql_version.version }} == "8.4.6" || ${{ matrix.mysql_version.version }} == "9.4.0" ]]; then echo "https://cdn.mysql.com/Downloads/MySQL-"; else echo "https://cdn.mysql.com/archives/mysql-"; fi)${{ matrix.mysql_version.line }}/mysql-${{ matrix.mysql_version.version }}.tar.gz) .

      - name: Export image contents
        run: docker export $(docker create alpine-build) -o image-output.tar

      - name: Unzip image contents
        run: tar -xvf image-output.tar

      - name: Create build output folder
        run: mkdir build-output

      - name: List directory
        run: ls image-output/mysql-build/mysql-${{ matrix.mysql_version.version }}

      - name: Copy license and README into the mysql build folder
        run: cp image-output/mysql-build/mysql-${{ matrix.mysql_version.version }}/{LICENSE,README} image-output/mysql-build/mysql-${{ matrix.mysql_version.version }}/mysql

      - name: Extract important files and folders from the mysql build folder into build output folder
        run: cp -r image-output/mysql-build/mysql-${{ matrix.mysql_version.version }}/mysql{bin,Docs,include,lib,LICENSE,man,README,share,support-files} build-output

      - name: Upload build to GitHub Actions Artifacts
        uses: actions/upload-artifact@4.6.2
        with:
          name: ${{ matrix.os.artifact-name }}-${{ matrix.mysql_version.version }}-image-output
          path: build-output
          if-no-files-found: error
          compression-level: 9
